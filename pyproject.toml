[build-system]
requires = ["hatchling",
"hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pysm3"
dynamic = ["version"]
description = "PySM generates full-sky simulations of Galactic emissions in intensity and polarization"
readme = "README.rst"
license.file = "LICENSE"
requires-python = ">=3.7"
authors = [
    { name = "Andrea Zonca", email = "code@andreazonca.com" },
]
dependencies = [
    "astropy",
    "h5py",
    "scipy < 1.15",
    "healpy >= 1.16.0",
    "importlib_metadata;python_version<'3.8'",
    "numba",
    "numpy < 2",
    "toml",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Physics",
]

[project.urls]
Homepage = "https://github.com/galsci/pysm"
Documentation = "https://pysm3.readthedocs.io/"
"Bug Tracker" = "https://github.com/galsci/pysm/issues"
Changelog = "https://github.com/galsci/pysm/blob/main/CHANGES.rst"

[project.optional-dependencies]
docs = [
    "ipykernel",
    "nbsphinx",
    "pandoc",
    "sphinx-pyproject",
    "sphinx-astropy",
    "sphinx-math-dollar",
]
mpi = [
    "mpi4py",
]
test = [
    "netcdf4",
    "pixell == 0.26.0",
    "psutil",
    "pytest",
    "nbval",
    "ipykernel",
    "pytest-astropy",
    "tox",
    "xarray",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/pysm3/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src/pysm3",
]

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:may indicate binary incompatibility:RuntimeWarning',
]
addopts = "-v --nbval --nbval-current-env"
testpaths = [
    "tests",
    "docs/bandpass_integration.ipynb",
    "docs/customize_components.ipynb",
    "docs/basic_use.ipynb",
    "docs/model_data.ipynb",
    "docs/smoothing_coord_rotation.ipynb"
]

## For debugging purposes, enable printing of logging calls

# log_cli = true
# log_cli_level = "DEBUG"

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
]
typing-modules = ["mypackage._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]
